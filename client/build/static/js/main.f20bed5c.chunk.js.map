{"version":3,"sources":["logo.svg","components/Btn/index.js","utils/API.js","pages/Start/index.js","pages/Login/index.js","pages/Signup/index.js","components/ProfileImg/index.js","pages/Select/index.js","pages/NewSet/index.js","components/PlaylistItem/index.js","pages/Previous/index.js","components/UserItem/index.js","pages/Playlist/index.js","pages/Test/index.js","pages/Test2/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Btn","props","href","loc","text","axios","get","id","playlistId","delete","newUserSet","post","userId","playlistIds","playlistUrl","Start","className","Login","Signup","ProfileImg","src","img","Select","useState","setUser","setImg","useEffect","API","then","res","data","_json","images","url","console","log","NewSet","handleInputChange","event","value","target","name","setState","state","user","newPlaylistName","createNewCollection","bind","this","loadUser","preventDefault","ownerId","ownerUsername","displayName","playlistName","userIds","window","location","assign","placeholder","onChange","onClick","Component","PlaylistItem","Previous","playlists","loadUserPlaylists","map","playlist","key","_id","reload","Playlist","playlistUsers","spotifyUserId","newUserUrl","arrayOfPlaylists","arrayOfSongs","songsToBeAddedToNewPlaylist","allSongs","getUserId","getUserPlaylistArrays","substring","lastIndexOf","loadPlaylistUsers","newSpotifyUserId","remove","replace","addUser","i","j","length","toLowerCase","includes","oldArr","concat","getUserSongsArrays","playlistSongs","songArr","forEach","songs","push","track","compareArrays","apply","makePlaylist","userAndSongs","finishPlaylist","obj","document","getElementById","style","visibility","open","args","fullArr","finalArr","count","arguments","e","UserItem","max","Test","App","exact","path","Test2","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f20bed5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React from \"react\";\r\n\r\n\r\nfunction Btn(props) {\r\n    return (\r\n        <a href={props.loc}>\r\n            <button >\r\n                {props.text}\r\n            </button>\r\n        </a>\r\n    );\r\n}\r\n\r\n\r\nexport default Btn;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    // Gets user\r\n    start: function () {\r\n        return axios.get(\"/auth/spotify/\");\r\n    },\r\n    getUser: function () {\r\n        return axios.get(\"/account\");\r\n    },\r\n    removeUserFromPlaylist: function (id, playlistId) {\r\n        return axios.delete(\"/api/playlistUser/\" + id + \"/\" + playlistId);\r\n    },\r\n    // Deletes the book with the given id\r\n    // deleteBook: function (id) {\r\n    //     return axios.delete(\"/api/books/\" + id);\r\n    // },\r\n    // adds new playlist to database\r\n    addNewUserSet: function (newUserSet) {\r\n        return axios.post(\"/api/users\", newUserSet);\r\n    },\r\n    // gets playlists owned to userId\r\n    getUserPlaylists: function (userId) {\r\n        return axios.get(\"/api/playlists/\" + userId);\r\n    },\r\n    // gets users owned to playlistId\r\n    getPlaylistUsers: function (playlistId) {\r\n        return axios.get(\"/api/playlistData/\" + playlistId);\r\n    },\r\n    addUserToPlaylist: function (playlistId, userId) {\r\n        return axios.post(\"/api/playlist/\" + playlistId + \"/\" + userId);\r\n    },\r\n\r\n    getUserName: function (id) {\r\n        return axios.get(\"https://api.spotify.com/v1/users/\" + id)\r\n    },\r\n    getUserSpotifyPlaylist: function (userId) {\r\n        return axios.get(\"/api/spotify/playlist/\" + userId);\r\n    },\r\n    getPlaylistSongs: function (playlistId) {\r\n        return axios.get(\"/api/spotify/songs/\" + playlistId);\r\n    },\r\n    makePlaylist: function (playlistIds) {\r\n        return axios.post(\"/api/spotify/playlist/\", playlistIds);\r\n    },\r\n    fillPlaylist: function (playlistUrl) {\r\n        return axios.post(\"/api/spotify/fillplaylist/\", playlistUrl);\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport Btn from \"../../components/Btn\";\r\nimport API from \"../../utils/API\";\r\n\r\n\r\nfunction Start() {\r\n    return (\r\n        <div className=\"hero is-medium is-fluid\">\r\n            <div className=\"hero-body container has-text-centered \">\r\n                <h1 className=\"title has-text-white\">inTune</h1>\r\n                <h2 className=\"subtitle has-text-white\">for Spotify</h2>\r\n\r\n\r\n                <a className=\"button is-success\"\r\n                    href=\"http://localhost:3001/auth/spotify\">\r\n                    Start\r\n            </a>\r\n\r\n                {/* <Btn text=\"Start\" loc={\"http://localhost:3001\" + \"/auth/spotify\"} /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Start;\r\n","import React from \"react\";\r\nimport Btn from \"../../components/Btn\";\r\n\r\n\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n            <h1>ON LOGIN</h1>\r\n            <Btn text=\"login\" loc=\"/select\"></Btn>\r\n            <Btn text=\"signup\" loc=\"/signup\"></Btn>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\n\r\nfunction Signup() {\r\n    return (\r\n        <div>\r\n            <h1>ON Signup</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nimport \"../ProfileImg/index.css\";\r\n\r\nfunction ProfileImg(props) {\r\n    return (\r\n        <a href=\"/select\"><img className=\"profImg\" src={props.img}></img></a>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileImg;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Btn from \"../../components/Btn\";\r\nimport ProfileImg from \"../../components/ProfileImg\";\r\nimport API from \"../../utils/API\";\r\n\r\n\r\n\r\nfunction Select() {\r\n    const [user, setUser] = useState({});\r\n    const [img, setImg] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n\r\n    }, []);\r\n\r\n    function loadUser() {\r\n        API.getUser()\r\n            .then(res => {\r\n                setUser(res.data);\r\n                setImg(res.data._json.images[0].url)\r\n                console.log(img);\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ProfileImg img={img}></ProfileImg>\r\n            <div className=\"hero is-medium is-fluid\">\r\n                <div className=\"hero-body container has-text-centered \">\r\n                    <h1 className=\"title has-text-white\">Home</h1>\r\n                    <h1 className=\"subtitle has-text-white\">What would you like to do?</h1>\r\n                    <a className=\"button is-success\" href=\"/newset\"> Create New Set</a>\r\n                    <br></br><br></br>\r\n                    <a className=\"button is-success\" href=\"/previous\"> Previous Set</a>\r\n                    {/* <Btn text=\"Create New Set\" loc=\"/newset\"></Btn>\r\n                    <Btn text=\"Previous Set\" loc=\"/previous\"></Btn> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Select;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ProfileImg from \"../../components/ProfileImg\";\r\nimport API from \"../../utils/API\";\r\n\r\n\r\nclass NewSet extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            img: \"\",\r\n            newPlaylistName: \"\"\r\n        };\r\n        this.createNewCollection = this.createNewCollection.bind(this) // bind method\r\n\r\n    };\r\n\r\n\r\n\r\n    // const [user, setUser] = useState({});\r\n    // const [img, setImg] = useState(\"\");\r\n    componentDidMount() {\r\n        this.loadUser()\r\n    };\r\n\r\n    loadUser() {\r\n        API.getUser()\r\n            .then(res => {\r\n\r\n                this.setState({ user: res.data });\r\n                // console.log(res.data.displayName);\r\n                this.setState({ img: res.data._json.images[0].url })\r\n\r\n                console.log(this.state.user);\r\n            })\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        let value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        // Updating the input's state\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n    };\r\n\r\n\r\n\r\n    createNewCollection(event) {\r\n        event.preventDefault();\r\n\r\n\r\n        API.addNewUserSet(\r\n            {\r\n                ownerId: this.state.user.id,\r\n                ownerUsername: this.state.user.displayName,\r\n                playlistName: this.state.newPlaylistName,\r\n                userIds: []\r\n            })\r\n            .then(res => window.location.assign(\"/previous\"))\r\n    }\r\n\r\n    // \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileImg img={this.state.img}></ProfileImg>\r\n                <div className=\"hero is-medium is-fluid\">\r\n                    <div className=\"hero-body container has-text-centered \">\r\n\r\n                        \r\n                        <h1 className=\"title has-text-white\">NEW SET</h1>\r\n                        <input className=\"input\"\r\n                            name=\"newPlaylistName\"\r\n                            placeholder=\"Name of Playlist\"\r\n                            onChange={this.handleInputChange}\r\n                            value={this.state.newPlaylistName}\r\n                        ></input>\r\n                        <a href=\"/previous\" className=\"button is-success\"\r\n                            onClick={this.createNewCollection}\r\n                        >Submit\r\n                \r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewSet;\r\n","import React from \"react\";\r\n\r\nfunction PlaylistItem(props) {\r\n    return (\r\n        <li><a className=\"button mb-1\" href={\"/playlist/\" + props.id}>{props.name}</a></li>\r\n    );\r\n}\r\n\r\n\r\nexport default PlaylistItem;\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport ProfileImg from \"../../components/ProfileImg\";\r\nimport PlaylistItem from \"../../components/PlaylistItem\";\r\n\r\nclass Previous extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            img: \"\",\r\n            playlists: []\r\n        };\r\n        // this.createNewCollection = this.createNewCollection.bind(this) // bind method\r\n\r\n    };\r\n\r\n    // const [user, setUser] = useState({});\r\n    // const [img, setImg] = useState(\"\");\r\n    componentDidMount() {\r\n        this.loadUser()\r\n    };\r\n\r\n    loadUser() {\r\n        API.getUser()\r\n            .then(res => {\r\n\r\n                this.setState({ user: res.data });\r\n                // console.log(res.data.displayName);\r\n                this.setState({ img: res.data._json.images[0].url })\r\n\r\n                console.log(this.state.user);\r\n\r\n                this.loadUserPlaylists(this.state.user.id)\r\n            })\r\n    };\r\n\r\n    loadUserPlaylists(id) {\r\n        API.getUserPlaylists(id)\r\n            .then(res => {\r\n                console.log(\"INDEX\");\r\n                console.log(res.data)\r\n\r\n                this.setState({ playlists: res.data });\r\n                console.log(\"state\");\r\n                console.log(this.state.playlists);\r\n            })\r\n    }\r\n\r\n    // \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileImg img={this.state.img}></ProfileImg>\r\n                <div className=\"hero is-medium is-fluid\">\r\n                    <div className=\"hero-body container has-text-centered \">\r\n\r\n\r\n                        <h1 className=\"title has-text-white\">{this.state.user.displayName}'s Playlists</h1>\r\n\r\n                        <ul>\r\n                            {this.state.playlists.map(playlist => (\r\n                                <PlaylistItem\r\n                                    key={playlist._id}\r\n                                    id={playlist._id}\r\n                                    name={playlist.playlistName}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Previous;\r\n","import React from \"react\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction PlaylistItem(props) {\r\n\r\n    function removeUser(id) {\r\n        console.log(props.playlistId)\r\n        API.removeUserFromPlaylist(id, props.playlistId)\r\n            .then(res => {\r\n\r\n                console.log(res.data);\r\n                // need to rerender page, might change this to a class, but otherwise rn, this works\r\n                window.location.reload();\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <li className=\"has-text-white mb-2 is-uppercase is-size-4\">{props.displayName} <a className=\"button is-danger\" id={props.id} onClick={() => removeUser(props.id)}>remove</a></li>\r\n    );\r\n}\r\n\r\n\r\nexport default PlaylistItem;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport ProfileImg from \"../../components/ProfileImg\";\r\nimport UserItem from \"../../components/UserItem\";\r\n\r\nclass Playlist extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: \"\",\r\n            img: \"\",\r\n            playlistId: \"\",\r\n            playlistName: \"\",\r\n            playlistUsers: [],\r\n            spotifyUserId: \"\",\r\n            newUserUrl: \"\",\r\n            arrayOfPlaylists: [],\r\n            arrayOfSongs: [],\r\n            songsToBeAddedToNewPlaylist: [],\r\n            allSongs: [],\r\n            playlistUrl: \"\"\r\n        };\r\n        this.getUserId = this.getUserId.bind(this) // bind method\r\n        this.getUserPlaylistArrays = this.getUserPlaylistArrays.bind(this) // bind method\r\n\r\n    };\r\n\r\n    // const [user, setUser] = useState({});\r\n    // const [img, setImg] = useState(\"\");\r\n    componentDidMount() {\r\n        this.loadUser()\r\n    };\r\n\r\n    loadUser() {\r\n        API.getUser()\r\n            .then(res => {\r\n\r\n                this.setState({ user: res.data });\r\n                // console.log(res.data.displayName);\r\n                this.setState({ img: res.data._json.images[0].url })\r\n\r\n                // console.log(this.state.user.id);\r\n\r\n                // window.location.href... gotten from \r\n                // https://stackoverflow.com/questions/4758103/last-segment-of-url-in-jquery\r\n                this.setState({ playlistId: window.location.href.substring(window.location.href.lastIndexOf('/') + 1) })\r\n                // console.log(this.state);\r\n                this.loadPlaylistUsers(this.state.playlistId)\r\n            })\r\n    };\r\n\r\n    loadPlaylistUsers(id) {\r\n        API.getPlaylistUsers(id)\r\n            .then(res => {\r\n                // console.log(\"INDEX\");\r\n                // console.log(res.data);\r\n                this.setState({ playlistName: res.data.playlistName });\r\n                this.setState({ playlistUsers: res.data.userIds })\r\n            })\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        // Getting the value and name of the input which triggered the change\r\n        let value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        // console.log(value, name);\r\n        // Updating the input's state\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n    };\r\n\r\n    getUserId() {\r\n        // console.log(this.state.newUserUrl)\r\n        let newSpotifyUserId = this.state.newUserUrl.substring(this.state.newUserUrl.lastIndexOf('user/') + 5);\r\n        let remove = this.state.newUserUrl.substring(this.state.newUserUrl.lastIndexOf('?si'));\r\n        newSpotifyUserId = newSpotifyUserId.replace(remove, \" \");\r\n        // console.log(newSpotifyUserId);\r\n        // console.log(typeof (newSpotifyUserId));\r\n        this.setState({ spotifyUserId: newSpotifyUserId }, () => {\r\n            this.addUser();\r\n        });\r\n\r\n    };\r\n\r\n    addUser() {\r\n        // console.log(\"adduser\")\r\n        // console.log(this.state);\r\n        API.addUserToPlaylist(this.state.playlistId, this.state.spotifyUserId)\r\n            .then(res => window.location.reload());\r\n    }\r\n\r\n    getUserPlaylistArrays() {\r\n        // for (i < this.state.playlistUsers.length; i++;) {\r\n\r\n        // console.log(this.state.playlistUsers.length);\r\n        for (let i = 0; i < this.state.playlistUsers.length; i++) {\r\n            const user = this.state.playlistUsers[i];\r\n            // console.log(i);\r\n\r\n            // } this.state.playlistUsers.forEach((user) => {\r\n            // console.log(user);\r\n            API.getUserSpotifyPlaylist(user)\r\n                .then(res => {\r\n                    const playlists = res.data;\r\n                    for (let j = 0; j < playlists.length; j++) {\r\n                        const playlist = playlists[j];\r\n                        if (playlist.name.toLowerCase().includes(\"work\")) {\r\n                            let oldArr = this.state.arrayOfPlaylists;\r\n                            this.setState({ arrayOfPlaylists: oldArr.concat(playlist) });\r\n                        }\r\n                    }\r\n                    // console.log(res.data) \r\n                })\r\n\r\n                .then(() => { if (i + 1 === this.state.playlistUsers.length) { this.getUserSongsArrays(); } })\r\n        };\r\n    }\r\n\r\n    getUserSongsArrays() {\r\n        for (let i = 0; i < this.state.arrayOfPlaylists.length; i++) {\r\n            const playlist = this.state.arrayOfPlaylists[i];\r\n\r\n            // console.log(playlist.id)\r\n            API.getPlaylistSongs(playlist.id)\r\n                .then(res => {\r\n                    // console.log(res.data);\r\n                    const playlistSongs = res.data;\r\n                    // console.log(playlistSongs.track.id)\r\n\r\n                    let songArr = [];\r\n                    playlistSongs.forEach(songs => {\r\n                        // console.log(songs.track.id);\r\n                        songArr.push(songs.track.id);\r\n                        this.state.allSongs.push(songs.track.id);\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    if (i + 1 === this.state.arrayOfPlaylists.length) {\r\n                        this.setState({ songsToBeAddedToNewPlaylist: this.compareArrays.apply(this, this.state.arrayOfSongs) });\r\n\r\n\r\n                        this.makePlaylist();\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    makePlaylist() {\r\n        const userAndSongs = {\r\n            songs: this.state.songsToBeAddedToNewPlaylist,\r\n            id: this.state.user.id,\r\n            playlistName: this.state.playlistName\r\n        }\r\n        API.makePlaylist(userAndSongs)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                this.finishPlaylist(res.data)\r\n            })\r\n    }\r\n\r\n    finishPlaylist(playlistId) {\r\n        console.log(\"HERE\")\r\n        console.log(this.state.allSongs);\r\n        let obj = {\r\n            id: playlistId,\r\n            allSongs: this.state.allSongs\r\n        };\r\n\r\n        API.fillPlaylist(obj)\r\n            .then(res => {\r\n                document.getElementById(\"genPlayBtn\").style.visibility = \"visible\";\r\n                document.getElementById(\"loading\").style.visibility = \"hidden\";\r\n\r\n\r\n                window.open(res.data);\r\n            })\r\n        // res should === the playlist url :D\r\n    }\r\n\r\n    compareArrays(args) {\r\n        let fullArr = [];\r\n        let finalArr = [];\r\n        // console.log(arguments);\r\n        // store the arguments inside a single array\r\n        for (let count = 0; count < arguments.length; count++) {\r\n            // console.log(count, arguments[count]);\r\n            fullArr[count] = arguments[count];\r\n        }\r\n        // loop through the array of arrays, comparing array i to array j\r\n        for (let i = 0; i < fullArr.length; i++) {\r\n            fullArr[i].forEach(function (e) {\r\n                for (let j = 0; j < fullArr.length; j++) {\r\n                    if (i !== j) {\r\n                        if (fullArr[j].includes(e) && !finalArr.includes(e)) finalArr.push(e);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return finalArr;\r\n    }\r\n\r\n    // need to add users to one of the playlists, add loadPlaylistUsers to API, idk recheck spotify.js \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileImg img={this.state.img}></ProfileImg>\r\n                <div className=\"hero is-medium is-fluid\">\r\n                    <div className=\"hero-body container has-text-centered \">\r\n\r\n                        <h1 className=\"title has-text-white\">{this.state.playlistName}</h1>\r\n\r\n                        <ul>\r\n                            {this.state.playlistUsers.map(user => (\r\n                                <UserItem\r\n                                    key={user}\r\n                                    id={user}\r\n                                    displayName={user}\r\n                                    playlistId={this.state.playlistId}\r\n                                />\r\n                            ))}\r\n\r\n                            <input\r\n                                className=\"input mb-1\"\r\n                                name=\"newUserUrl\"\r\n                                placeholder=\"URL of New User\"\r\n                                onChange={this.handleInputChange}\r\n                                value={this.state.newUserUrl}></input>\r\n                            <a className=\"button is-success mb-6\" onClick={this.getUserId}>ADD NEW USER</a>\r\n                        </ul>\r\n\r\n                        <p></p>\r\n                        <a className=\"button is-success\"\r\n                            id=\"genPlayBtn\" onClick={() => {\r\n                                this.getUserPlaylistArrays();\r\n                                document.getElementById(\"genPlayBtn\").style.visibility = \"hidden\";\r\n                                document.getElementById(\"loading\").style.visibility = \"visible\";\r\n                            }}>\r\n                            GENERATE PLAYLIST</a>\r\n\r\n                        <progress id=\"loading\" style={{ visibility: \"hidden\" }} className=\"progress is-medium is-success mt-6\" max=\"100\">15%</progress>\r\n                    </div >\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Playlist;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport ProfileImg from \"../../components/ProfileImg\";\r\n\r\nfunction Test() {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [img, setImg] = useState(\"\");\r\n    useEffect(() => {\r\n        loadUser()\r\n\r\n    }, []);\r\n\r\n    function loadUser() {\r\n        API.getUser()\r\n            .then(res => {\r\n                setUser(res.data);\r\n                setImg(res.data._json.images[0].url)\r\n                console.log(res.data);\r\n            }\r\n                // console.log(state.test)\r\n\r\n                // this.setState({ test: res.data.user.displayName })\r\n                // console.log(res.data.displayName)\r\n\r\n            )\r\n    };\r\n\r\n\r\n    function compareArrays(args) {\r\n        var fullArr = [];\r\n        var finalArr = [];\r\n        // store the arguments inside a single array\r\n        for (var count = 0; count < arguments.length; count++) {\r\n            console.log(arguments[count]);\r\n            fullArr[count] = arguments[count];\r\n        }\r\n        // loop through the array of arrays, comparing array i to array j\r\n        for (let i = 0; i < fullArr.length; i++) {\r\n            fullArr[i].forEach(function (e) {\r\n                for (let j = 0; j < fullArr.length; j++) {\r\n                    if (i !== j) {\r\n                        if (fullArr[j].includes(e) && !finalArr.includes(e)) finalArr.push(e);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return finalArr;\r\n    }\r\n\r\n\r\n\r\n\r\n    // render() {\r\n    return (\r\n        <div>\r\n            <h1>TEST PAGE</h1>\r\n            {/* <button\r\n                onClick={loadUser}>\r\n                Test\r\n            </button> */}\r\n            <p>USERNAME: {user.displayName}</p>\r\n            <a href=\"/test2\"><img src={img}></img>\r\n            </a>\r\n            <ProfileImg img={img}></ProfileImg>\r\n\r\n            <button onClick={() => console.log(compareArrays([1, 2, 3], [2, 5, 8, 7], [5, 2, 1, 4], [4, 3], [7]))}>Test</button>\r\n        </div >\r\n    );\r\n    // }\r\n}\r\n\r\n\r\nexport default Test;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\n\r\n\r\nfunction Test() {\r\n\r\n    const [user, setUser] = useState({});\r\n    const [img, setImg] = useState(\"\");\r\n    useEffect(() => {\r\n        loadUser()\r\n\r\n    }, []);\r\n\r\n    function loadUser() {\r\n        API.getUser()\r\n            .then(res => {\r\n                setUser(res.data);\r\n                setImg(res.data._json.images[0].url)\r\n                console.log(img);\r\n            }\r\n                // console.log(state.test)\r\n\r\n                // this.setState({ test: res.data.user.displayName })\r\n                // console.log(res.data.displayName)\r\n\r\n            )\r\n    };\r\n    // render() {\r\n    return (\r\n        <div>\r\n            <h1>TEST PAGE</h1>\r\n            {/* <button\r\n                onClick={loadUser}>\r\n                Test\r\n            </button> */}\r\n            <p>USERNAME: {user.displayName}</p>\r\n            <img src={img}></img>\r\n        </div >\r\n    );\r\n    // }\r\n}\r\n\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\n\nimport \"./App.css\";\n\nimport Start from \"./pages/Start\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Select from \"./pages/Select\";\nimport NewSet from \"./pages/NewSet\";\nimport Previous from \"./pages/Previous\";\nimport Playlist from \"./pages/Playlist\";\nimport Test from \"./pages/Test\";\nimport Test2 from \"./pages/Test2\";\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Start />\n                    </Route>\n                    <Route exact path={\"/login\"}>\n                        <Login />\n                    </Route>\n                    <Route exact path={\"/signup\"}>\n                        <Signup />\n                    </Route>\n                    <Route exact path={\"/select\"}>\n                        <Select />\n                    </Route>\n                    <Route exact path={\"/newset\"}>\n                        <NewSet />\n                    </Route>\n                    <Route exact path={\"/previous\"}>\n                        <Previous />\n                    </Route>\n                    <Route path={\"/playlist/\"}>\n                        <Playlist />\n                    </Route>\n                    <Route exact path={\"/test\"}>\n                        <Test />\n                    </Route>\n                    <Route exact path={\"/test2\"}>\n                        <Test2 />\n                    </Route>\n                    {/* <Route>\n                        <NoMatch />\n                    </Route> */}\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}